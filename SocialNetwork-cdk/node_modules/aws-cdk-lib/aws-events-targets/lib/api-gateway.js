"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.ApiGateway=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var util_1=()=>{var tmp=require("./util");return util_1=()=>tmp,tmp},api=()=>{var tmp=require("../../aws-apigateway");return api=()=>tmp,tmp},iam=()=>{var tmp=require("../../aws-iam");return iam=()=>tmp,tmp};class ApiGateway{constructor(restApi,props){this.props=props;try{jsiiDeprecationWarnings().aws_cdk_lib_aws_apigateway_IRestApi(restApi),jsiiDeprecationWarnings().aws_cdk_lib_aws_events_targets_ApiGatewayProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,ApiGateway),error}this._restApi=restApi}get restApi(){try{jsiiDeprecationWarnings().print("aws-cdk-lib.aws_events_targets.ApiGateway#restApi","Use the `iRestApi` getter instead")}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,jsiiDeprecationWarnings().getPropertyDescriptor(this,"restApi").get),error}if(!api().RestApi.isRestApi(this._restApi))throw new Error("The iRestApi is not a RestApi construct, and cannot be retrieved this way.");return this._restApi}get iRestApi(){return this._restApi}bind(rule,_id){try{jsiiDeprecationWarnings().aws_cdk_lib_aws_events_IRule(rule)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.bind),error}if(this.props?.deadLetterQueue&&(0,util_1().addToDeadLetterQueueResourcePolicy)(rule,this.props.deadLetterQueue),(this.props?.path?.match(/\*/g)?.length??0)!==(this.props?.pathParameterValues||[]).length)throw new Error("The number of wildcards in the path does not match the number of path pathParameterValues.");const restApiArn=this._restApi.arnForExecuteApi(this.props?.method,this.props?.path||"/",this.props?.stage||this._restApi.deploymentStage.stageName),role=this.props?.eventRole||(0,util_1().singletonEventRole)(this._restApi);return role.addToPrincipalPolicy(new(iam()).PolicyStatement({resources:[restApiArn],actions:["execute-api:Invoke","execute-api:ManageConnections"]})),{...this.props?(0,util_1().bindBaseTargetConfig)(this.props):{},arn:restApiArn,role,deadLetterConfig:this.props?.deadLetterQueue&&{arn:this.props.deadLetterQueue?.queueArn},input:this.props?.postBody,targetResource:this._restApi,httpParameters:{headerParameters:this.props?.headerParameters,queryStringParameters:this.props?.queryStringParameters,pathParameterValues:this.props?.pathParameterValues}}}}exports.ApiGateway=ApiGateway,_a=JSII_RTTI_SYMBOL_1,ApiGateway[_a]={fqn:"aws-cdk-lib.aws_events_targets.ApiGateway",version:"2.146.0"};
