"use strict";var _a;Object.defineProperty(exports,"__esModule",{value:!0}),exports.CfnTrainingDataset=void 0;var jsiiDeprecationWarnings=()=>{var tmp=require("../../.warnings.jsii.js");return jsiiDeprecationWarnings=()=>tmp,tmp};const JSII_RTTI_SYMBOL_1=Symbol.for("jsii.rtti");var cdk=()=>{var tmp=require("../../core");return cdk=()=>tmp,tmp},cfn_parse=()=>{var tmp=require("../../core/lib/helpers-internal");return cfn_parse=()=>tmp,tmp};class CfnTrainingDataset extends cdk().CfnResource{static _fromCloudFormation(scope,id,resourceAttributes,options){resourceAttributes=resourceAttributes||{};const resourceProperties=options.parser.parseValue(resourceAttributes.Properties),propsResult=CfnTrainingDatasetPropsFromCloudFormation(resourceProperties);if(cdk().isResolvableObject(propsResult.value))throw new Error("Unexpected IResolvable");const ret=new CfnTrainingDataset(scope,id,propsResult.value);for(const[propKey,propVal]of Object.entries(propsResult.extraProperties))ret.addPropertyOverride(propKey,propVal);return options.parser.handleAttributes(ret,resourceAttributes,id),ret}constructor(scope,id,props){super(scope,id,{type:CfnTrainingDataset.CFN_RESOURCE_TYPE_NAME,properties:props});try{jsiiDeprecationWarnings().aws_cdk_lib_aws_cleanroomsml_CfnTrainingDatasetProps(props)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,CfnTrainingDataset),error}cdk().requireProperty(props,"name",this),cdk().requireProperty(props,"roleArn",this),cdk().requireProperty(props,"trainingData",this),this.attrStatus=cdk().Token.asString(this.getAtt("Status",cdk().ResolutionTypeHint.STRING)),this.attrTrainingDatasetArn=cdk().Token.asString(this.getAtt("TrainingDatasetArn",cdk().ResolutionTypeHint.STRING)),this.cdkTagManager=new(cdk()).TagManager(cdk().TagType.STANDARD,"AWS::CleanRoomsML::TrainingDataset",void 0,{tagPropertyName:"tags"}),this.description=props.description,this.name=props.name,this.roleArn=props.roleArn,this.tags=props.tags,this.trainingData=props.trainingData}get cfnProperties(){return{tags:this.cdkTagManager.renderTags(this.tags),description:this.description,name:this.name,roleArn:this.roleArn,trainingData:this.trainingData}}inspect(inspector){try{jsiiDeprecationWarnings().aws_cdk_lib_TreeInspector(inspector)}catch(error){throw process.env.JSII_DEBUG!=="1"&&error.name==="DeprecationError"&&Error.captureStackTrace(error,this.inspect),error}inspector.addAttribute("aws:cdk:cloudformation:type",CfnTrainingDataset.CFN_RESOURCE_TYPE_NAME),inspector.addAttribute("aws:cdk:cloudformation:props",this.cfnProperties)}renderProperties(props){return convertCfnTrainingDatasetPropsToCloudFormation(props)}}exports.CfnTrainingDataset=CfnTrainingDataset,_a=JSII_RTTI_SYMBOL_1,CfnTrainingDataset[_a]={fqn:"aws-cdk-lib.aws_cleanroomsml.CfnTrainingDataset",version:"2.146.0"},CfnTrainingDataset.CFN_RESOURCE_TYPE_NAME="AWS::CleanRoomsML::TrainingDataset";function CfnTrainingDatasetColumnSchemaPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("columnName",cdk().requiredValidator)(properties.columnName)),errors.collect(cdk().propertyValidator("columnName",cdk().validateString)(properties.columnName)),errors.collect(cdk().propertyValidator("columnTypes",cdk().requiredValidator)(properties.columnTypes)),errors.collect(cdk().propertyValidator("columnTypes",cdk().listValidator(cdk().validateString))(properties.columnTypes)),errors.wrap('supplied properties not correct for "ColumnSchemaProperty"')}function convertCfnTrainingDatasetColumnSchemaPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetColumnSchemaPropertyValidator(properties).assertSuccess(),{ColumnName:cdk().stringToCloudFormation(properties.columnName),ColumnTypes:cdk().listMapper(cdk().stringToCloudFormation)(properties.columnTypes)}):properties}function CfnTrainingDatasetColumnSchemaPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("columnName","ColumnName",properties.ColumnName!=null?cfn_parse().FromCloudFormation.getString(properties.ColumnName):void 0),ret.addPropertyResult("columnTypes","ColumnTypes",properties.ColumnTypes!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getString)(properties.ColumnTypes):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrainingDatasetGlueDataSourcePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("catalogId",cdk().validateString)(properties.catalogId)),errors.collect(cdk().propertyValidator("databaseName",cdk().requiredValidator)(properties.databaseName)),errors.collect(cdk().propertyValidator("databaseName",cdk().validateString)(properties.databaseName)),errors.collect(cdk().propertyValidator("tableName",cdk().requiredValidator)(properties.tableName)),errors.collect(cdk().propertyValidator("tableName",cdk().validateString)(properties.tableName)),errors.wrap('supplied properties not correct for "GlueDataSourceProperty"')}function convertCfnTrainingDatasetGlueDataSourcePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetGlueDataSourcePropertyValidator(properties).assertSuccess(),{CatalogId:cdk().stringToCloudFormation(properties.catalogId),DatabaseName:cdk().stringToCloudFormation(properties.databaseName),TableName:cdk().stringToCloudFormation(properties.tableName)}):properties}function CfnTrainingDatasetGlueDataSourcePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("catalogId","CatalogId",properties.CatalogId!=null?cfn_parse().FromCloudFormation.getString(properties.CatalogId):void 0),ret.addPropertyResult("databaseName","DatabaseName",properties.DatabaseName!=null?cfn_parse().FromCloudFormation.getString(properties.DatabaseName):void 0),ret.addPropertyResult("tableName","TableName",properties.TableName!=null?cfn_parse().FromCloudFormation.getString(properties.TableName):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrainingDatasetDataSourcePropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("glueDataSource",cdk().requiredValidator)(properties.glueDataSource)),errors.collect(cdk().propertyValidator("glueDataSource",CfnTrainingDatasetGlueDataSourcePropertyValidator)(properties.glueDataSource)),errors.wrap('supplied properties not correct for "DataSourceProperty"')}function convertCfnTrainingDatasetDataSourcePropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetDataSourcePropertyValidator(properties).assertSuccess(),{GlueDataSource:convertCfnTrainingDatasetGlueDataSourcePropertyToCloudFormation(properties.glueDataSource)}):properties}function CfnTrainingDatasetDataSourcePropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("glueDataSource","GlueDataSource",properties.GlueDataSource!=null?CfnTrainingDatasetGlueDataSourcePropertyFromCloudFormation(properties.GlueDataSource):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrainingDatasetDatasetInputConfigPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("dataSource",cdk().requiredValidator)(properties.dataSource)),errors.collect(cdk().propertyValidator("dataSource",CfnTrainingDatasetDataSourcePropertyValidator)(properties.dataSource)),errors.collect(cdk().propertyValidator("schema",cdk().requiredValidator)(properties.schema)),errors.collect(cdk().propertyValidator("schema",cdk().listValidator(CfnTrainingDatasetColumnSchemaPropertyValidator))(properties.schema)),errors.wrap('supplied properties not correct for "DatasetInputConfigProperty"')}function convertCfnTrainingDatasetDatasetInputConfigPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetDatasetInputConfigPropertyValidator(properties).assertSuccess(),{DataSource:convertCfnTrainingDatasetDataSourcePropertyToCloudFormation(properties.dataSource),Schema:cdk().listMapper(convertCfnTrainingDatasetColumnSchemaPropertyToCloudFormation)(properties.schema)}):properties}function CfnTrainingDatasetDatasetInputConfigPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("dataSource","DataSource",properties.DataSource!=null?CfnTrainingDatasetDataSourcePropertyFromCloudFormation(properties.DataSource):void 0),ret.addPropertyResult("schema","Schema",properties.Schema!=null?cfn_parse().FromCloudFormation.getArray(CfnTrainingDatasetColumnSchemaPropertyFromCloudFormation)(properties.Schema):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrainingDatasetDatasetPropertyValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("inputConfig",cdk().requiredValidator)(properties.inputConfig)),errors.collect(cdk().propertyValidator("inputConfig",CfnTrainingDatasetDatasetInputConfigPropertyValidator)(properties.inputConfig)),errors.collect(cdk().propertyValidator("type",cdk().requiredValidator)(properties.type)),errors.collect(cdk().propertyValidator("type",cdk().validateString)(properties.type)),errors.wrap('supplied properties not correct for "DatasetProperty"')}function convertCfnTrainingDatasetDatasetPropertyToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetDatasetPropertyValidator(properties).assertSuccess(),{InputConfig:convertCfnTrainingDatasetDatasetInputConfigPropertyToCloudFormation(properties.inputConfig),Type:cdk().stringToCloudFormation(properties.type)}):properties}function CfnTrainingDatasetDatasetPropertyFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("inputConfig","InputConfig",properties.InputConfig!=null?CfnTrainingDatasetDatasetInputConfigPropertyFromCloudFormation(properties.InputConfig):void 0),ret.addPropertyResult("type","Type",properties.Type!=null?cfn_parse().FromCloudFormation.getString(properties.Type):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}function CfnTrainingDatasetPropsValidator(properties){if(!cdk().canInspect(properties))return cdk().VALIDATION_SUCCESS;const errors=new(cdk()).ValidationResults;return properties&&typeof properties=="object"&&!Array.isArray(properties)||errors.collect(new(cdk()).ValidationResult("Expected an object, but received: "+JSON.stringify(properties))),errors.collect(cdk().propertyValidator("description",cdk().validateString)(properties.description)),errors.collect(cdk().propertyValidator("name",cdk().requiredValidator)(properties.name)),errors.collect(cdk().propertyValidator("name",cdk().validateString)(properties.name)),errors.collect(cdk().propertyValidator("roleArn",cdk().requiredValidator)(properties.roleArn)),errors.collect(cdk().propertyValidator("roleArn",cdk().validateString)(properties.roleArn)),errors.collect(cdk().propertyValidator("tags",cdk().listValidator(cdk().validateCfnTag))(properties.tags)),errors.collect(cdk().propertyValidator("trainingData",cdk().requiredValidator)(properties.trainingData)),errors.collect(cdk().propertyValidator("trainingData",cdk().listValidator(CfnTrainingDatasetDatasetPropertyValidator))(properties.trainingData)),errors.wrap('supplied properties not correct for "CfnTrainingDatasetProps"')}function convertCfnTrainingDatasetPropsToCloudFormation(properties){return cdk().canInspect(properties)?(CfnTrainingDatasetPropsValidator(properties).assertSuccess(),{Description:cdk().stringToCloudFormation(properties.description),Name:cdk().stringToCloudFormation(properties.name),RoleArn:cdk().stringToCloudFormation(properties.roleArn),Tags:cdk().listMapper(cdk().cfnTagToCloudFormation)(properties.tags),TrainingData:cdk().listMapper(convertCfnTrainingDatasetDatasetPropertyToCloudFormation)(properties.trainingData)}):properties}function CfnTrainingDatasetPropsFromCloudFormation(properties){if(cdk().isResolvableObject(properties))return new(cfn_parse()).FromCloudFormationResult(properties);if(properties=properties??{},!(properties&&typeof properties=="object"&&!Array.isArray(properties)))return new(cfn_parse()).FromCloudFormationResult(properties);const ret=new(cfn_parse()).FromCloudFormationPropertyObject;return ret.addPropertyResult("description","Description",properties.Description!=null?cfn_parse().FromCloudFormation.getString(properties.Description):void 0),ret.addPropertyResult("name","Name",properties.Name!=null?cfn_parse().FromCloudFormation.getString(properties.Name):void 0),ret.addPropertyResult("roleArn","RoleArn",properties.RoleArn!=null?cfn_parse().FromCloudFormation.getString(properties.RoleArn):void 0),ret.addPropertyResult("tags","Tags",properties.Tags!=null?cfn_parse().FromCloudFormation.getArray(cfn_parse().FromCloudFormation.getCfnTag)(properties.Tags):void 0),ret.addPropertyResult("trainingData","TrainingData",properties.TrainingData!=null?cfn_parse().FromCloudFormation.getArray(CfnTrainingDatasetDatasetPropertyFromCloudFormation)(properties.TrainingData):void 0),ret.addUnrecognizedPropertiesAsExtra(properties),ret}
